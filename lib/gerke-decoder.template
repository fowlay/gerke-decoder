#! /usr/bin/env bash
# -*-Shell-script-*-
#
# Shell wrapper over the gerke-decoder Java program.
#
# Dependencies: mpg123  -- required for decoding mp3 recordings

function isCygwin {
    [[ "$(uname -o)" == Cygwin ]]
}

declare -r GitRepo=$(
    if isCygwin; then
        echo $(cygpath -w $(dirname $(dirname $0)))
    else
        echo $(dirname $(dirname $0))
    fi)

declare -r -a ClassPathElements=(
    "$(find $GitRepo/target -type f -name 'gerke_decoder-@GERKE_DECODER_REL@.jar')"
    "$GitRepo/m2/uk/me/berndporr/iirj/1.1/iirj-1.1.jar"
    "$GitRepo/m2/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar"
)

function join {
    local -r sep=$(if isCygwin; then echo ';'; else echo ':'; fi)
    local result=""
    for e in "$@"; do
        if [[ -z "$result" ]]; then
            result+="$e"
        else
            result+="${sep}$e"
        fi
    done
    echo "$result"
}

declare -r WaveFile=$(mktemp --dry-run /tmp/gerke-decoder-XXXXXXXX)

function cleanup {
    rm -f $WaveFile
}

trap cleanup EXIT

declare -a Args=()
for arg in "$@"; do
    if [[ -r "$arg" ]]; then
        Mime=($(file --brief --mime "$arg"))
        if [[ ${#Mime[*]} -eq 0 ]]; then
            Args+=("$arg")
        elif [[ "${Mime[0]}" =~ audio/mpeg ]]; then
            if ! command -v mpg123 >/dev/null; then
                echo "missing conversion utility: 'mpg123'" >&2
                exit 1
            else
                mpg123 --quiet --wav $WaveFile "$arg"
                if isCygwin; then
                    Args+=($(cygpath -w $WaveFile))
                else
                    Args+=($WaveFile)
                fi
            fi
        else
            ## assume a .wav file
            Args+=("$arg")
        fi
    else
        Args+=("$arg")
    fi
done

java \
     -classpath "$(join ${ClassPathElements[@]})" \
     st.foglo.gerke_decoder.GerkeDecoder \
     "${Args[@]}"
